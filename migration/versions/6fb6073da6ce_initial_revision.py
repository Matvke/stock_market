"""Initial revision

Revision ID: 6fb6073da6ce
Revises: 37598a4f00fb
Create Date: 2025-03-13 19:50:10.720878

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6fb6073da6ce'
down_revision: Union[str, None] = '37598a4f00fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.alter_column('users', 'role',
                    type_=sa.Enum('USER', 'ADMIN', name='roleenum'),
                    postgresql_using='role::roleenum')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instruments',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('ticker')
    )
    op.create_table('balances',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['ticker'], ['instruments.ticker'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'ticker')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('direction', sa.Enum('BUY', 'SELL', name='directionenun'), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'EXECUTED', 'PARTIALLY_EXECUTED', 'CANCELLED', name='statusenum'), server_default=sa.text("'NEW'"), nullable=False),
    sa.Column('filled', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ticker'], ['instruments.ticker'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ticker'], ['instruments.ticker'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('keys')
    op.add_column('users', sa.Column('api_key', sa.String(length=255), nullable=False))
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'creared_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('creared_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_column('users', 'api_key')
    op.create_table('keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('api_key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('creared_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='keys_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='keys_pkey')
    )
    op.drop_table('transactions')
    op.drop_table('orders')
    op.drop_table('balances')
    op.drop_table('instruments')
    # ### end Alembic commands ###
